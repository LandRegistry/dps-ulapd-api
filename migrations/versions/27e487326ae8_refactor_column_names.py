"""Refactor column names

Revision ID: 27e487326ae8
Revises: 8f8110b7a407
Create Date: 2020-01-07 15:25:40.932064

"""
from alembic import op
import sqlalchemy as sa
from flask import current_app


# revision identifiers, used by Alembic.
revision = '27e487326ae8'
down_revision = '8f8110b7a407'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('activity', sa.Column('dataset_name', sa.String(), nullable=True))
    op.drop_column('activity', 'dataset_id')
    op.add_column('dataset', sa.Column('licence_name', sa.String(), nullable=True))
    op.drop_column('dataset', 'licence_id')
    op.add_column('user_terms_link', sa.Column('licence_name', sa.String(), nullable=True))
    op.drop_column('user_terms_link', 'licence_id')
    op.drop_table('licence')
    op.create_table('licence',
                    sa.Column('licence_id', sa.Integer(), nullable=False),
                    sa.Column('licence_name', sa.String(), nullable=False),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.Column('last_updated', sa.Date(), nullable=False),
                    sa.Column('created', sa.Date(), nullable=False),
                    sa.PrimaryKeyConstraint('licence_id'),
                    sa.UniqueConstraint('licence_name')
                    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE licence TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON licence_licence_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_terms_link', sa.Column('licence_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('user_terms_link', 'licence_name')
    op.add_column('dataset', sa.Column('licence_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('dataset', 'licence_name')
    op.add_column('activity', sa.Column('dataset_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('activity', 'dataset_name')
    op.drop_table('licence')
    op.create_table('licence',
                    sa.Column('dataset_licence_id', sa.Integer(), nullable=False),
                    sa.Column('licence_id', sa.String(), nullable=False),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.Column('last_updated', sa.Date(), nullable=False),
                    sa.Column('created', sa.Date(), nullable=False),
                    sa.PrimaryKeyConstraint('dataset_licence_id'),
                    sa.UniqueConstraint('licence_id')
                    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE licence TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON licence_dataset_licence_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))
    # ### end Alembic commands ###
