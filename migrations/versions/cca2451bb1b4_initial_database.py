"""Initial Database

Revision ID: cca2451bb1b4
Revises:
Create Date: 2019-11-15 10:48:03.651624

"""
from alembic import op
import sqlalchemy as sa
from flask import current_app


# revision identifiers, used by Alembic.
revision = 'cca2451bb1b4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
        sa.Column('activity_id', sa.Integer(), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=True),
        sa.Column('user_details_id', sa.Integer(), nullable=False),
        sa.Column('activity_type', sa.String(), nullable=False),
        sa.Column('ip_address', sa.String(), nullable=False),
        sa.Column('api', sa.Boolean(), nullable=False),
        sa.Column('file', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('activity_id')
    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE activity TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON activity_activity_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))

    op.create_table('licence',
        sa.Column('dataset_licence_id', sa.Integer(), nullable=False),
        sa.Column('licence_id', sa.String(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('url', sa.String(), nullable=False),
        sa.Column('last_updated', sa.Date(), nullable=False),
        sa.Column('created', sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint('dataset_licence_id'),
        sa.UniqueConstraint('licence_id')
    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE licence TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON licence_dataset_licence_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))

    op.create_table('package',
        sa.Column('package_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('version', sa.String(), nullable=True),
        sa.Column('url', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('licence_id', sa.String(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('type', sa.String(), nullable=True),
        sa.Column('private', sa.Boolean(), nullable=True),
        sa.Column('external', sa.Boolean(), nullable=True),
        sa.Column('metadata_created', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('package_id'),
        sa.UniqueConstraint('name')
    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE package TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON package_package_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))

    op.create_table('user_details',
        sa.Column('user_details_id', sa.Integer(), nullable=False),
        sa.Column('user_type_id', sa.Integer(), nullable=False),
        sa.Column('ldap_id', sa.String(), nullable=False),
        sa.Column('api_key', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('first_name', sa.String(), nullable=False),
        sa.Column('last_name', sa.String(), nullable=False),
        sa.Column('contactable', sa.Boolean(), nullable=False),
        sa.Column('telephone_number', sa.String(), nullable=False),
        sa.Column('address_line_1', sa.String(), nullable=False),
        sa.Column('address_line_2', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=False),
        sa.Column('county', sa.String(), nullable=True),
        sa.Column('postcode', sa.String(), nullable=False),
        sa.Column('country', sa.String(), nullable=True),
        sa.Column('country_of_incorporation', sa.String(), nullable=True),
        sa.Column('organisation_name', sa.String(), nullable=True),
        sa.Column('organisation_type', sa.String(), nullable=True),
        sa.Column('registration_number', sa.String(), nullable=True),
        sa.Column('date_added', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('user_details_id')
    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE user_details TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON user_details_user_details_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))

    op.create_table('user_type',
        sa.Column('user_type_id', sa.Integer(), nullable=False),
        sa.Column('user_type', sa.String(), nullable=True),
        sa.Column('date_added', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('user_type_id')
    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE user_type TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON user_type_user_type_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))

    op.create_table('user_terms_link',
        sa.Column('user_terms_link_id', sa.Integer(), nullable=False),
        sa.Column('user_details_id', sa.Integer(), nullable=False),
        sa.Column('licence_id', sa.String(), nullable=False),
        sa.Column('date_agreed', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_details_id'], ['user_details.user_details_id'], ),
        sa.PrimaryKeyConstraint('user_terms_link_id')
    )
    op.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE user_terms_link TO " + current_app.config.get('APP_SQL_USERNAME'))
    op.execute("GRANT USAGE, SELECT ON user_terms_link_user_terms_link_id_seq TO " + current_app.config.get('APP_SQL_USERNAME'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_terms_link')
    op.drop_table('user_type')
    op.drop_table('user_details')
    op.drop_table('package')
    op.drop_table('licence')
    op.drop_table('activity')
    # ### end Alembic commands ###
